# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import metricevaluate_pb2 as metricevaluate__pb2


class MetricEvaluateServiceStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MetricEvaluate = channel.unary_unary(
                '/metricevaluate.MetricEvaluateService/MetricEvaluate',
                request_serializer=metricevaluate__pb2.MetricEvaluateRequest.SerializeToString,
                response_deserializer=metricevaluate__pb2.MetricEvaluateReply.FromString,
                )


class MetricEvaluateServiceServicer(object):
    """The greeting service definition.
    """

    def MetricEvaluate(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MetricEvaluateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MetricEvaluate': grpc.unary_unary_rpc_method_handler(
                    servicer.MetricEvaluate,
                    request_deserializer=metricevaluate__pb2.MetricEvaluateRequest.FromString,
                    response_serializer=metricevaluate__pb2.MetricEvaluateReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'metricevaluate.MetricEvaluateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MetricEvaluateService(object):
    """The greeting service definition.
    """

    @staticmethod
    def MetricEvaluate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/metricevaluate.MetricEvaluateService/MetricEvaluate',
            metricevaluate__pb2.MetricEvaluateRequest.SerializeToString,
            metricevaluate__pb2.MetricEvaluateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
